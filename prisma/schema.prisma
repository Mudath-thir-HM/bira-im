generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String            @id @default(cuid())
  email             String            @unique
  name              String
  password          String
  emailVerified     Boolean           @default(false)
  verificationToken String?           @unique
  xp                Int               @default(0)
  avatarUrl         String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  classLevel        ClassLevel
  courses           CourseProgress[]
  achievements      UserAchievement[]

  @@index([email])
}

model CourseProgress {
  id               String   @id @default(cuid())
  userId           String
  subjectId        String
  subjectName      String
  totalLessons     Int      @default(7)
  level            Int      @default(1)
  icon             String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  lessonsCompleted Int      @default(0)
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, subjectId])
  @@index([userId])
}

model Achievement {
  id          String            @id @default(cuid())
  name        String            @unique
  description String
  icon        String
  createdAt   DateTime          @default(now())
  users       UserAchievement[]
}

model UserAchievement {
  id            String      @id @default(cuid())
  userId        String
  achievementId String
  earnedAt      DateTime    @default(now())
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, achievementId])
  @@index([userId])
}

enum ClassLevel {
  JSS1
  JSS2
  JSS3
}
